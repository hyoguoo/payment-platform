input {
  # TCP input for JSON logs
  tcp {
    port => 5050
    codec => json_lines
  }
  
  # File input for application logs
  file {
    path => "/var/log/app/payment-platform.log"
    start_position => "beginning"
    codec => json
    tags => ["application"]
  }
}

filter {
  # Parse timestamp
  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
  }
  
  # Add service metadata
  mutate {
    add_field => { 
      "service" => "payment-platform"
      "environment" => "production"
    }
  }
  
  # Parse log level
  if [level] {
    mutate {
      add_field => { "log_level" => "%{level}" }
    }
    
    # Tag errors for alerting
    if [level] == "ERROR" {
      mutate {
        add_tag => [ "error", "alert" ]
      }
    }
  }
  
  # Parse payment-related logs
  if [logger] =~ "payment" {
    mutate {
      add_field => { "module" => "payment" }
    }
    
    # Extract payment ID if present
    grok {
      match => { 
        "message" => "paymentKey=(?<payment_key>[a-zA-Z0-9_-]+)"
      }
      tag_on_failure => []
    }
  }
  
  # Parse webhook-related logs
  if [logger] =~ "webhook" {
    mutate {
      add_field => { "module" => "webhook" }
    }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "host", "port" ]
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "payment-platform-%{+YYYY.MM.dd}"
  }
  
  # Debug output (disable in production)
  # stdout { 
  #   codec => rubydebug 
  # }
}
