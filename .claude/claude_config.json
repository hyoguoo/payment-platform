{
  "name": "Payment Platform",
  "description": "Payment system integrating with Toss Payments - implementing data integrity validation, state-based recovery, and comprehensive monitoring",
  "project_type": "spring-boot",
  "documentation_file": "CLAUDE.md",
  "technology_stack": [
    "Java 21",
    "Spring Boot 3.3.3",
    "MySQL 8.0",
    "Docker",
    "JUnit 5",
    "QueryDSL",
    "Testcontainers",
    "Logback",
    "Prometheus",
    "Grafana"
  ],
  "architecture": "port-adapter (hexagonal)",
  "core_concepts": {
    "payment_states": ["READY", "IN_PROGRESS", "DONE", "FAILED", "EXPIRED", "UNKNOWN"],
    "cross_validation": "Cross-validation between client, server, and PG responses",
    "retry_mechanism": "State-based auto-recovery with max 5 retry attempts",
    "transaction_scope": "External API calls outside transaction boundary with compensating transactions",
    "monitoring": "Structured logging (traceId/orderId) with AOP-based history tracking"
  },
  "key_directories": {
    "application": "Business logic layer (ServiceImpl, UseCase, Port)",
    "domain": "Domain models and core rules (pure Java, framework-independent)",
    "infrastructure": "External system integration (repository, internal adapter)",
    "presentation": "Controllers and InternalReceiver (cross-domain collaboration)"
  },
  "coding_conventions": {
    "package_structure": "domain-driven with port-adapter pattern",
    "dependency_rule": "Presentation → Application → Domain ← Infrastructure (implements Ports)",
    "naming": {
      "service": "*ServiceImpl (orchestrates use cases)",
      "usecase": "*UseCase (single responsibility)",
      "port": "*Port (external dependency abstraction)",
      "repository": "*Repository (interface), *RepositoryImpl (implementation)",
      "internal": "Internal*Adapter (implements Port), *InternalReceiver (receives cross-domain calls)"
    },
    "transaction": "External API calls outside transaction scope, with compensating transactions when needed"
  },
  "testing_strategy": {
    "integration_tests": "Extend BaseIntegrationTest (Testcontainers MySQL)",
    "unit_tests": "Use Fake objects (src/test/java/.../mock/)",
    "coverage": "JaCoCo (excludes: Q*, dto, entity, exception, infrastructure, enums)"
  },
  "development": {
    "test": "./gradlew test (includes JaCoCo coverage)",
    "build": "./gradlew clean bootJar",
    "run": "./scripts/run.sh (starts full stack)",
    "clean": "cd docker/compose && docker-compose down -v",
    "env_setup": "Create .env.secret file and set TOSS_SECRET_KEY"
  },
  "documentation": [
    "CLAUDE.md (comprehensive project guide)",
    "https://hyoguoo.gitbook.io/tech-log/posts/payment-system-with-toss",
    "https://hyoguoo.gitbook.io/tech-log/posts/payment-status-with-retry",
    "https://hyoguoo.gitbook.io/tech-log/posts/minimize-transaction-scope",
    "https://hyoguoo.gitbook.io/tech-log/posts/log-structure-and-performance",
    "https://hyoguoo.gitbook.io/tech-log/posts/payment-history-with-aop",
    "https://hyoguoo.gitbook.io/tech-log/posts/payment-system-test"
  ]
}
